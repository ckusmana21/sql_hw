#################
PART 1: QUERIES #
#################


######################
# SQL WORLD DATABASE #
######################

# 1
SELECT Name
FROM country
WHERE Continent = 'South America';

# 2
SELECT Population
FROM country
WHERE Name = 'Germany';

# 3
SELECT city.Name
FROM city
JOIN country ON city.CountryCode = country.Code
WHERE country.Name = 'Japan';

# 4
SELECT Name, 
Population
FROM country
WHERE Continent = 'Africa'
ORDER BY Population DESC
LIMIT 3;

# 5
SELECT Name, LifeExpectancy
FROM country
WHERE Population BETWEEN 100000 AND 5000000;

# 6
SELECT country.Name
FROM country
JOIN countrylanguage ON country.Code = countrylanguage.CountryCode
WHERE countrylanguage.Language = 'French' AND countrylanguage.IsOfficial = 'T';

########################
# SQL CHINOOK DATABASE #
########################

SELECT Album.Title
FROM Album
JOIN Artist ON Album.ArtistId = Artist.ArtistId
WHERE Artist.Name = 'AC/DC';

# 2
SELECT Customer.FirstName, Customer.LastName, Customer.Email
FROM Customer
WHERE Customer.Country = 'Brazil';

# 3
SELECT Playlist.PlaylistId, Playlist.Name
FROM Playlist;

# 4
SELECT COUNT(Track.TrackId) AS TotalRockTracks
FROM Track
JOIN Genre 
ON Track.GenreId = Genre.GenreId
WHERE Genre.Name = 'Rock';

# 5
SELECT Employee.FirstName, Employee.LastName
FROM Employee
JOIN Employee 
AS Manager
ON Employee.ReportsTo = Manager.EmployeeId
WHERE Manager.FirstName = 'Nancy' 
AND Manager.LastName = 'Edwards';

# 6
SELECT Customer.FirstName, Customer.LastName, 
SUM(Invoice.Total) 
AS TotalSales
FROM Customer
JOIN Invoice ON Customer.CustomerId = Invoice.CustomerId
GROUP BY Customer.CustomerId, Customer.FirstName, Customer.LastName
ORDER BY TotalSales DESC;


#############################
# PART 2: YOUR OWN DATABASE #
#############################

# Small business: selling laptops to federal judges

################
# New Database #
################

CREATE TABLE Courts (
    CourtId INT PRIMARY KEY AUTO_INCREMENT,
    CourtName VARCHAR(100) NOT NULL,
    CourtType VARCHAR(50) NOT NULL 
);

CREATE TABLE Judges (
    JudgeId INT PRIMARY KEY AUTO_INCREMENT,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    CourtId INT,
    FOREIGN KEY (CourtId) REFERENCES Courts(CourtId)
);

CREATE TABLE Computers (
    ComputerId INT PRIMARY KEY AUTO_INCREMENT,
    Model VARCHAR(100) NOT NULL,
    Price DECIMAL(10, 2) NOT NULL
);

INSERT INTO Courts (CourtName, CourtType) VALUES
('DDC', 'District'),
('DC Circuit', 'Circuit'),
('2nd Circuit', 'Circuit'),
('4th Circuit', 'Circuit'),
('DConn', 'District'),
('DDC', 'District'),
('DC Circuit', 'Circuit'),
('DDC', 'District'),
('DDC', 'District');

INSERT INTO Judges (FirstName, LastName, CourtId) VALUES
('Beryl', 'Howell', 1),
('Bradley', 'Garcia', 2),
('Beth', 'Robinson', 3),
('James', 'Wynn', 4),
('Stefan', 'Underhill', 5),
('Tanya', 'Chutkan', 6),
('Cornelia', 'Pillard', 7),
('Paul', 'Friedman', 8),
('Emmet', 'Sullivan', 9);

INSERT INTO Computers (Model, Price) VALUES
('Dell', 1200.00),
('MacBook', 2200.00),
('Lenovo', 1800.00),
('Dell', 1600.00),
('Lenovo', 1800.00),
('Dell', 1200.00),
('MacBook', 2200.00),
('Acer', 1000.00),
('Dell', 1200.00);

###########
# Queries #
###########


# 1. Judges and their court names
SELECT Judges.FirstName, Judges.LastName, Courts.CourtName
FROM Judges
JOIN Courts ON Judges.CourtId = Courts.CourtId;

# 2. List of all District Court judges
SELECT Judges.FirstName, Judges.LastName, Courts.CourtName
FROM Judges
JOIN Courts ON Judges.CourtId = Courts.CourtId
WHERE Courts.CourtType = 'District';

# 3. Laptops that cost between $1000 and $1500
SELECT Model, Price
FROM Computers
WHERE Price BETWEEN 1000.00 AND 1500.00;

# 4. List of all D.C. Circuit judges
SELECT Judges.FirstName, Judges.LastName
FROM Judges
JOIN Courts ON Judges.CourtId = Courts.CourtId
WHERE Courts.CourtName = 'DC Circuit';
